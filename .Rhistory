knitr::opts_chunk$set(echo = TRUE)
#load('TW.Model-bg_target_REVISION_2.rdata')
load('TW.Model-bg_target_FINAL_AND_YET_REVISED.rdata')
knitr::opts_chunk$set(echo = TRUE)
#load('TW.Model-bg_target_REVISION_2.rdata')
load('TW.Model-bg_target_FINAL_AND_YET_REVISED.rdata')
library(brms)
pp_check(TW_col.dta1,type = "rootogram", nsamples=2000, prob = 0.9, size = 1)
pp_check(TW_col.dta1,type = "bars", nsamples=200, prob = 0.9, size = 1)
pp_check(TW_col.dta1,type = "rootogram", nsamples=2000, prob = 0.9, size = 1)
pp_check(TW_col.dta1,type = "bars", nsamples=200, prob = 0.9, size = 1)
green_colours <- read_delim( 'green colours.txt',delim=";")
library('readr')
green_colours <- read_delim( 'green colours.txt',delim=";")
library('readr')
green_colours <- read_delim( 'green colours.csv',delim=";")
orange_colours <- read_delim('orange colours.csv',delim=";")
library('readr')
green_colours <- read_delim( 'green colours.csv',delim=";")
orange_colours <- read_delim('orange colours.csv',delim=";")
write_delim(green_colours,  "green_colours.txt" ,delim="\t")
write_delim(orange_colours, "orange colours.txt",delim="\t")
write_delim(orange_colours, "orange_colours.txt",delim="\t")
knitr::opts_chunk$set(echo = TRUE)
data <- read_delim('green colours.csv', delim = "\t", row.names = NULL) # change the "Working Directory" to the folder containing your data file. Change the name xxxxx.csv to your filename
knitr::opts_chunk$set(echo = TRUE)
library(lattice)
library(graphics)
library(psyphy)
install.packages('psyphy')
library(lattice)
library(graphics)
library(psyphy)
library(lmerTest)
library(MASS)
library(glm2)
install.packages('glm2')
knitr::opts_chunk$set(echo = TRUE)
library(lattice)
library(graphics)
library(psyphy)
library(lmerTest)
library(MASS)
library(glm2)
library(readr)
data <- read_delim('green colours.csv', delim = "\t")
data$background <- factor(data$background)
knitr::opts_chunk$set(echo = TRUE)
library(lattice)
library(graphics)
library(psyphy)
library(lmerTest)
library(MASS)
library(glm2)
library(readr)
data <- read_delim('green_colours.txt', delim = "\t")
data$background <- factor(data$background)
data$ind <- factor(data$ind)
data$batch <- as.factor(data$batch)
mod.0 <- glm.WH(cbind(corr,incorr)~1, data = data, lambda.init = 0.1, interval = c(0, 1), NumAlt = 2) # Null model, data is explained only by variance. lambda.init is your estimate of the upper asymptote and NumAlt specifies the number of alternatives e.g. 2 alternative forced choice
mod.1 <- glm.WH(cbind(corr,incorr)~Colour.difference*background*sex+ind+batch, data = data, lambda.init = 0.05, interval = c(0, 1), NumAlt = 2, maxit=1000) # Model where data is affected by the stimulus level
data
knitr::opts_chunk$set(echo = TRUE)
library(lattice)
library(graphics)
library(psyphy)
library(lmerTest)
library(MASS)
library(glm2)
library(readr)
data <- read_delim('green_colours.txt', delim = "\t")
data$background <- factor(data$background)
data$ind <- factor(data$ind)
data$batch <- as.factor(data$batch)
mod.0 <- glm.WH(cbind(corr,incorr)~1, data = data, lambda.init = 0.1, interval = c(0, 1), NumAlt = 2) # Null model, data is explained only by variance. lambda.init is your estimate of the upper asymptote and NumAlt specifies the number of alternatives e.g. 2 alternative forced choice
mod.1 <- glm.WH(cbind(corr,incorr)~Colour.difference*background*sex+ind+batch, data = data, lambda.init = 0.05, interval = c(0, 1), NumAlt = 2, maxit=1000) # Model where data is affected by the stimulus level
rm(list=ls())
knitr::opts_chunk$set(echo = TRUE)
#install.packages(c('boot','lme4','MASS','lmerTest','DHARMa'))
library(boot)
library(lme4)
library(MASS)
library(lmerTest)
library(DHARMa)
col.dta <- read_delim('colour_discriminate_short_format.txt', delim='\t')
data <- col.dta
data$stimuli <- factor(data$stimuli)
data$target <- with(data, ifelse(background == stimuli, 'same', 'diff'))
data$target <- as.factor(data$target)
data$background <- factor(data$background)
data$ind <- factor(data$ind)
data$batch <- as.factor(data$batch)
data$chick <- paste0(data$ind, data$batch)
resplot <- function(mod){
#are residuals normally distributed
hist(residuals(mod), prob = T, xlab = formula(mod), main = paste('Residuals for',(formula(mod)[3])))# this actually looks OK to me
lines(density(residuals(mod)), col = 'red')
lines(seq(min(residuals(mod)),max(residuals(mod)), length.out = 10^3), dnorm(seq(min(residuals(mod)),max(residuals(mod)), length.out = 10^3), 0, sd(residuals(mod))), col = 'blue')
legend('topright', legend = c('kernel density', 'fitted normal'), lty = 1, col = c('red', 'blue'))
boxplot(residuals(mod),
add = T, axes = F, horizontal = T, cex = 0.5, outline = T, border = rgb(0,0.1,0,0.7), at = par('yaxp')[2]*0.1,
pars = list(boxwex = par('yaxp')[2]*0.3, staplewex = par('yaxp')[2]*0.5, outwex = par('yaxp')[2]*0.05))#
}
lme1 <- glmer(cbind(corr,incorr)~Colour.difference*background*target*sex + (1+Colour.difference|chick)+ (1+Colour.difference*background|batch), data = data, family = binomial(link = 'logit'))
print(.Machine$double.eps * 10^8)#2.220446e-08
lme2 <- glmer(cbind(corr,incorr)~Colour.difference*background*target*sex + (1+Colour.difference|chick)+ (1+Colour.difference*background|batch), data = data, family = binomial(link = 'logit'), control = glmerControl(tol = .Machine$double.eps * 10^8))
lme0 <- glmer(cbind(corr,incorr)~1 + (1|chick)+ (1|batch), data = data, family = binomial(link = 'logit'))
anova(lme0, lme1, lme2, test = 'Chisq') #the model taking experience into account deviates less from the data recorded (there is an effect of experience)
anova(lme0, lme2, test = 'Chisq')
AIC(lme0, lme1, lme2) # the model with fixed effects has lower AIC and is therefore a better fit
resplot(lme2)#looks good
shapiro.test(residuals(lme2)) # even passes a Shapiro-Wilk test
dev.new(width = 9)
simulateResiduals(lme2,  n=10^3, plot = T, refit = T)
